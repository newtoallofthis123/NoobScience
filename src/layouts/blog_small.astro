---
import Base from "./base.astro";
import HomeNav from "../components/navigation/home_nav";

const {frontmatter} = Astro.props;

let posts = await Astro.glob('../pages/w/*/*.mdx');
posts.sort(
    (a: any, b: any) =>
        new Date(b.frontmatter.date).getTime() -
        new Date(a.frontmatter.date).getTime()
);
let recommended = posts.filter(
    (post: any) =>
        post.frontmatter.category === frontmatter.category &&
        post.frontmatter.title !== frontmatter.title
);
posts.map((post: any) => {
    frontmatter.tags.map((tag: any) => {
        if (
            post.frontmatter.tags.includes(tag) &&
            post.frontmatter.title !== frontmatter.title &&
            !recommended.includes(post)
        ) {
            recommended.push(post);
        }
    });
});
posts = posts.filter(
    (post: any) =>
        post.frontmatter.title !== frontmatter.title &&
        post.frontmatter.draft !== true &&
        !recommended.includes(post) &&
        !post.frontmatter.quick
);
recommended = recommended.filter(
    (post: any) => post.frontmatter.draft !== true && !post.frontmatter.quick
);
---

<Base title={frontmatter.title + " | Long Ishan Reads"}>
    <HomeNav client:load />
    <div class="p-10">
        <div class="md:p-10">
            <h1 class="text-7xl font-heading leading-relaxed">
                {frontmatter.title}
            </h1>
            <p class="text-gray-500 text-4xl py-5">
                {new Date(frontmatter.date).toDateString()} â€¢ {frontmatter.minutesRead}
            </p>
            <article class="md">
                <slot />
            </article>
        </div>
        <span class="block w-40 h-1 mt-5 my-5 bg-blue-800"></span>
        <span class="block w-40 h-1 mb-5 bg-red-600"></span>
        <div>
            <h3 class="text-4xl font-heading leading-relaxed py-5">
                Posted in <a href={"/categories/" + frontmatter.category} class="text-gray-800 hover:text-gray-900">@{frontmatter.category}</a>
            </h3>
            {
                frontmatter.tags.map((tag:string) => {
                    return (
                        <span class="text-2xl pr-5">
                            <a href={"/tags/" + tag} class="text-gray-800 hover:text-gray-900">
                                #{tag}
                            </a>
                        </span>
                    )
                })
            }
        </div>
    </div>
    <style is:inline>
        article p{
            font-size: 1.5rem;
            line-height: 3.6rem;
        }
        article a{
            text-decoration: 1.2px underline #000;
        }
        h1,h2,h3,h4,h5,h6{
            font-family: "Archivo Black", sans-serif;
        }
        article h1>a, article h2>a, article h3>a, article h4>a, article h5>a, article h6>a{
            text-decoration: none;
        }

        article h1{
            font-size: 5rem;
            line-height: 4rem;
        }

        article h2{
            font-size: 3rem;
            line-height: 3.5rem;
            padding: 2rem 0;
        }
        article ol{
            list-style-type: decimal;
            padding: 0.5rem 0;
            padding-left: 2rem;
        }
        article ul{
            list-style-type: disc;
            padding-left: 2rem;
        }
        article li{
            font-size: 1.5rem;
            font-weight: 100;
            line-height: 3.6rem;
        }
        .math svg{
            margin: 1.5rem 0;
        }
    </style>
</Base>