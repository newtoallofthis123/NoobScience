---
import Base from "../../layouts/base.astro";
import HomeNav from "../../components/navigation/home_nav";
let posts = await Astro.glob("./*/*.mdx")
posts.sort(
    (a: any, b: any) =>
        new Date(b.frontmatter.date).getTime() -
        new Date(a.frontmatter.date).getTime()
);

const url_name = Astro.url.pathname
---

<Base 
    title={url_name + " | NoobScience"}
>
    <HomeNav client:load/>
    <div class="flex justify-center items-center">
        <div class="md:w-3/5 w-full p-5">
            <h1 class="font-heading text-4xl md:py-8">
                File Listing for {url_name}
            </h1>
            <p>
                Given below is the file listing for the directory {url_name} on the NoobScience website.
                This is not exactly a file listing, but a localized `ls` command for the directory.
            </p>
            <div>
                {posts.length != 0 &&
                    posts.map((post: any) => (
                        <div
                            class="flex flex-col justify-center items-center md:justify-normal md:items-start md:flex-row md:p-4 p-1 border-gray-400 border-b-2"
                        >
                            <div class="p-4">
                                <p class="text-2xl text-center md:text-justify font-bold">
                                    {post.frontmatter.emoji && (
                                        <span>{post.frontmatter.emoji} </span>
                                    )}
                                    <a href={post.url}>
                                        {post.frontmatter.title}
                                    </a>
                                </p>
                                <p class="text-gray-500 text-lg w-full md:w-3/5 py-2">
                                    {post.frontmatter.description}
                                </p>
                                {post.frontmatter.tags.length > 0 && (
                                    <ul>
                                        {post.frontmatter.tags.map(
                                            (tag: string) => (
                                                <a href={"/tags/" + tag}>
                                                    <li class="inline-block bg-gray-300 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2">
                                                        {tag}
                                                    </li>
                                                </a>
                                            )
                                        )}
                                    </ul>
                                )}
                                <p class="text-gray-500 text-sm">
                                    {new Date(
                                        post.frontmatter.date
                                    ).toDateString()}
                                </p>
                            </div>
                        </div>
                    ))}
            </div>
        </div>
    </div>
</Base>