---
import { getCollection } from 'astro:content';

let posts = await getCollection('blog', ({ data }) => {
    return data.draft !== true;
});

posts = posts.sort(
    (a: any, b: any) =>
        new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);
let { term } = Astro.params;
term = term?.toString();
term = term?.toLowerCase();
term = term?.split(' ').join('');

let recommend_posts = [];

// Second Level Check the title
for (const post of posts) {
    if (
        post.data.title
            ?.toLowerCase()
            ?.split(' ')
            .join('')
            //@ts-ignore
            .includes(term)
    ) {
        recommend_posts.push(post);
    }
}

// First Level Check the tags
for (const post of posts) {
    //@ts-ignore
    if (post.data.tags.includes(term)) {
        // @ts-ignore
        recommend_posts.push(post);
    }
}

// Third Level Check the description
for (const post of posts) {
    if (
        post.data.description
            ?.toLowerCase()
            ?.split(' ')
            .join('')
            .replace(/[-.,]/g, '')
            //@ts-ignore
            .includes(term)
    ) {
        // @ts-ignore
        recommend_posts.push(post);
    }
}

// Check the Category
for (const post of posts) {
    if (post.data.category?.toLowerCase() == term?.toLowerCase()) {
        // @ts-ignore
        recommend_posts.push(post);
    }
}

// Fourth level tags

for (const post of posts) {
    for (const tag of post.data.tags) {
        //@ts-ignore
        if (tag.toLowerCase().includes(term)) {
            // @ts-ignore
            recommend_posts.push(post);
        }
    }
}

// Fifth level check the body
// Only do this if the term is longer than 10 characters
//@ts-ignore
if (term?.length > 8) {
    for (const post of posts) {
        //@ts-ignore
        if (post.body?.toLowerCase()?.split(' ').join('').includes(term)) {
            recommend_posts.push(post);
        }
    }
}

// Remove the duplicates while preserving the order
const final_posts: any = [];
for (const post of recommend_posts) {
    if (!final_posts.includes(post)) {
        final_posts.push(post);
    }
}

return new Response(JSON.stringify(final_posts), {
    headers: {
        'content-type': 'application/json;charset=UTF-8',
    },
});
---
