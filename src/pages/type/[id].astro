---
import Base from "../../layouts/base.astro";
import HomeNav from "../../components/navigation/home_nav";

const {id} = Astro.params;

let posts = await Astro.glob("../*/*/*.mdx")
posts = posts.sort(
    (a: any, b: any) =>
        new Date(b.frontmatter.date).getTime() -
        new Date(a.frontmatter.date).getTime()
);
posts = posts.filter((post: any) => post.frontmatter.type === id);

const text = {
    "long": "Below are my ever green posts. These posts are not time sensitive and will be relevant for a long time. So, I hope you enjoy reading them. PS: They are better with some coffee.☕",
    "quick": "Below are my quick posts. These will eventually be converted into long posts. So, I hope you enjoy reading them. ",
    "notes": "Below are my notes. These are my notes from various books, articles, and videos. So, I hope you enjoy reading them. PS: They are better with some coffee.☕"
}
---

<Base title={"Posts of Type: " + id?.toLocaleUpperCase() + " | Ishan Writes"}>
    <HomeNav client:load/>
    <div class="p-10">
        <div>
            <h1 class="md:text-6xl font-heading p-4">
                {
                    // @ts-ignore
                    id?.slice(0, 1).toLocaleUpperCase() + id?.slice(1) + " Posts"
                }
            </h1>
            <p class="px-4">
                {
                    // @ts-ignore
                    text[id]
                }
            </p>
        </div>
        <div>
            {
                posts.map((post) => {
                    return (
                        <div onclick={
                                    "location.href = '" + post.url + "'"
                                } class="p-4 m-4 transform hover:scale-105 hover:border-2 hover:border-gray-300 rounded-lg cursor-pointer transition duration-300 ease-in-out">
                                <h1 class="text-3xl leading-relaxed font-bold">
                                {post.frontmatter.emoji}{' '}{post.frontmatter.title}
                            </h1>
                            <p>
                                {post.frontmatter.description}    
                            </p>
                            <p>
                                Posted on <span id="p-heading">{new Date(post.frontmatter.date).toDateString()}</span> | {post.frontmatter.minutesRead}
                            </p>
                        </div>
                    )
                })
            }
        </div>
    </div>
</Base>