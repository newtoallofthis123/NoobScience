---
import Base from '../../layouts/base.astro';
import { getEntry, getCollection } from 'astro:content';
import { Image } from 'astro:assets';
import Heading from '../../components/small/heading.astro';
import { siMedium } from 'simple-icons';
import { siHashnode } from 'simple-icons';
import { siSubstack } from 'simple-icons';
import { siDevdotto } from 'simple-icons';
import Spotify from '../../components/utils/md/audio/spotify.astro';

const { slug } = Astro.params;

//@ts-ignore
const blogPost = await getEntry('blog', slug);
const frontmatter = blogPost?.data;
const meta = await blogPost?.render();
const BASE_URL = Astro.url.host;
const share_url = Astro.url.host + Astro.url.pathname;

//@ts-ignore
const { Content } = await blogPost?.render();

const posts = await getCollection('blog');
let recommended: any = [];

for (let i = 0; i < posts.length; i++) {
    if (posts[i].data.category == frontmatter?.category) {
        recommended.push(posts[i]);
    }
}
for (let i = 0; i < posts.length; i++) {
    frontmatter?.tags.forEach((tag: string) => {
        if (posts[i].data.tags.includes(tag)) {
            recommended.push(posts[i]);
        }
    });
}
recommended = recommended.filter((item: any, index: number) => {
    return recommended.indexOf(item) === index;
});
recommended = recommended.filter((item: any) => {
    return item.data.title != frontmatter?.title && item.data.draft != true;
});
recommended = recommended.slice(0, 5);

type headings = {
    depth: number;
    slug: string;
    text: string;
}[];
//@ts-ignore
const headings: headings = meta?.headings;
---

<Base
    description={frontmatter?.description}
    emoji={frontmatter?.emoji}
    img={frontmatter?.img?.src || '/assets/banner.png'}
    selection_only={frontmatter?.selection_only}
    color={frontmatter?.color}
    bg={frontmatter?.bg}
    nav_title="Ishan Writes"
    selection_bg={frontmatter?.selection_bg || '#facc15'}
    selection_color={frontmatter?.selection_color || '#000'}
    title={frontmatter?.type == 'notes'
        ? frontmatter?.title + " | Ishan's Jots"
        : frontmatter?.title + ' | Ishan Writes'}
>
    <div class="pl-3">
        <div class="flex flex-col">
            <div class="pb-2 md:w-4/5">
                <div class="flex flex-row flex-wrap">
                    <a
                        href={'/categories/' + frontmatter?.category}
                        id="cat"
                        class="p-0.5 mr-5">{frontmatter?.category}</a
                    >
                    {
                        frontmatter?.tags.map((tag: string) => {
                            return (
                                <a href={'/tags/' + tag} class="pr-5">
                                    {tag}
                                </a>
                            );
                        })
                    }
                </div>
                <div class="pt-2">
                    <h1
                        class="text-3xl font-heading font-bold leading-snug py-2"
                    >
                        {frontmatter?.title}
                    </h1>
                    <p class="md:pb-1">
                        {frontmatter?.description}
                    </p>
                    <p class="py-1">
                        {
                            frontmatter?.date &&
                                new Date(frontmatter.date).toDateString()
                        } | {
                            Math.round(
                                meta?.remarkPluginFrontmatter.wordsRead / 265
                            )
                        } min read
                    </p>
                    {
                        frontmatter?.series && (
                            <p>
                                Part of the{' '}
                                <a
                                    id="cat"
                                    href={`/series/${frontmatter?.series}`}
                                >
                                    {frontmatter?.series}
                                </a>{' '}
                                series.
                            </p>
                        )
                    }
                </div>
            </div>
        </div>
        <div
            class=`flex flex-col ${frontmatter?.full_img != false ? 'section_colored' : ''}`
        >
            {
                frontmatter?.img && (
                    <div class={`py-5`}>
                        <Image
                            class=" rounded-md"
                            src={frontmatter.img}
                            alt={frontmatter?.title}
                        />
                    </div>
                )
            }
        </div>
        <div class="flex flex-col justify-center md:pb-5">
            <div class="w-full">
                <div class=`pt-2 flex flex-col ${frontmatter?.type == "quick" && 'hidden'}`>
                    <h2 class="text-2xl py-1">
                        ➡️ Table of Contents
                    </h2>
                    <ul class="py-1">
                        {
                            headings.map((heading) => {
                                return (
                                    <li class="cursor-pointer py-1 transform hover:translate-x-1 transition duration-300 ease-in-out">
                                        <a
                                            href={`#${heading.slug}`}
                                            class=`text-base ${heading.depth == 2 ? 'font-semibold' : ''} ${heading.depth == 3 ? 'pl-3 font-normal' : ''} truncate`
                                        >
                                            {heading.text}
                                        </a>
                                    </li>
                                );
                            })
                        }
                    </ul>
                </div>
                <div class="flex flex-col">
                    {
                        frontmatter?.audio && (
                            <div class={`items-center w-full py-5`}>
                                <Spotify url={frontmatter.audio} />
                            </div>
                        )
                    }
                    {frontmatter?.type != 'quick' && <div />}
                    <div class={`md:p-0 p-2 font-${frontmatter?.font}`}>
                        <Content />
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="flex flex-col justify-center items-center md:pb-8">
        <h1 class="md:text-2xl text-xl">
            Catch this post on{' '}
        </h1>
        <div class="flex flex-row justify-center items-center">
            {
                frontmatter?.medium && (
                    <div class="text-center my-2">
                        <button class="special_btn rounded-3xl">
                            <a class="flex flex-row " href={frontmatter.medium}>
                                <span id="icon" set:html={siMedium.svg} />
                                Medium
                            </a>
                        </button>
                    </div>
                )
            }
            {
                frontmatter?.substack && (
                    <div class="text-center my-2">
                        <button class="special_btn rounded-3xl">
                            <a
                                class="flex flex-row "
                                href={frontmatter.substack}
                            >
                                <span id="icon" set:html={siSubstack.svg} />
                                SubStack
                            </a>
                        </button>
                    </div>
                )
            }
            {
                frontmatter?.devto && (
                    <div class="text-center my-2">
                        <button class="special_btn rounded-3xl">
                            <a class="flex flex-row " href={frontmatter.devto}>
                                <span id="icon" set:html={siDevdotto.svg} />
                                Dev.to
                            </a>
                        </button>
                    </div>
                )
            }
            {
                frontmatter?.hashnode && (
                    <div class="text-center my-2">
                        <button class="special_btn rounded-3xl">
                            <a
                                class="flex flex-row "
                                href={frontmatter.hashnode}
                            >
                                <span id="icon" set:html={siHashnode.svg} />
                                Hashnode
                            </a>
                        </button>
                    </div>
                )
            }
        </div>
    </div>
    <div class="flex flex-col justify-center md:pt-4">
        <div class="w-full">
            <h1 class="text-center text-2xl">
                Feel free to leave a comment below!
            </h1>
            <script
                src="https://utteranc.es/client.js"
                repo="newtoallofthis123/comments"
                issue-term="pathname"
                label="comment"
                theme="preferred-color-scheme"
                crossorigin="anonymous"
                async></script>
            <div class="text-center my-2">
                <button class="special_btn rounded-3xl">
                    <a
                        href=`https://github.com/newtoallofthis123/noobscience/tree/master/src/content/blog/${slug}.mdx`
                    >
                        Edit the post on <i class="bi bi-github"></i> Github
                    </a>
                </button>
            </div>
        </div>
        <div class="w-full p-2">
            <h2 class="text-2xl">Recommended Reading</h2>
            <p class="text-base py-2">
                Recommendations are based on the category and tags of this post.
            </p>
            <div>
                {
                    recommended.slice(0, 5).map((post: any) => {
                        return (
                            <div class="py-2">
                                <a href={`/blog/${post.slug}`}>
                                    <h3 class="text-xl">
                                        {post.data.emoji} {post.data.title}
                                    </h3>
                                </a>
                                <p class="text-base">{post.data.description}</p>
                            </div>
                        );
                    })
                }
            </div>
        </div>
    </div>
    <style
        define:vars={{
            section_bg: frontmatter?.bg,
            section_color: frontmatter?.color,
        }}
    >
        .section_colored {
            background-color: var(--section_bg);
            color: var(--section_color);
        }
        #cat {
            background-color: var(--selection_bg);
            color: var(--selection_color);
        }
        .special_btn {
            background-color: var(--selection_bg);
        }
        .special_btn a {
            color: var(--selection_color);
        }
    </style>
    <script>
        //bind ctrl + f to trigger cursor on search bar
        document.addEventListener('keydown', function (e) {
            if (e.ctrlKey && e.key === 'k') {
                e.preventDefault();
                // @ts-ignore
                document.getElementById('search').focus();
            }
        });
    </script>
</Base>
